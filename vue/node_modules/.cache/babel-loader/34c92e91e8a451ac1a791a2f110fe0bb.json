{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createStaticVNode as _createStaticVNode, Fragment as _Fragment } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"dropdown\\\"><button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton1\\\" data-bs-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\"> Dropdown button </button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton1\\\"><li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Action</a></li><li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Another action</a></li><li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Something else here</a></li></ul></div>\", 1);\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Korisnicko ime\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Lozinka\", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  key: 0,\n  color: \"red\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => this.$router.push('/home'))\n  }, \"Pocetna strana\"), _createElementVNode(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.handleSubmit && $options.handleSubmit(...args), [\"prevent\"]))\n  }, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => this.user.korisnickoIme = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, this.user.korisnickoIme]]), _hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => this.user.lozinka = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, this.user.lozinka]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = $event => this.errMsg = false)\n  }, \"Log In\"), _createElementVNode(\"button\", {\n    class: \"reg-button\",\n    onClick: _cache[4] || (_cache[4] = $event => this.$router.push('/register'))\n  }, \"Register\")], 32\n  /* HYDRATE_EVENTS */\n  ), this.errMsg === true ? (_openBlock(), _createElementBlock(\"b\", _hoisted_4, \"Neispravni podaci\")) : _createCommentVNode(\"v-if\", true)], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;gCAcQA,oBAA6B,OAA7B,EAA6B,IAA7B,EAAO,gBAAP,EAAqB;AAAA;AAArB;;gCAEAA,oBAAsB,OAAtB,EAAsB,IAAtB,EAAO,SAAP,EAAc;AAAA;AAAd;;;;EAKDC,KAAK,EAAC;;;6DApBbC,YAWIF,oBAAmE,QAAnE,EAAmE;IAA1DG,OAAK,2CAAOC,OAAP,CAAeC,IAAf,CAAmB,OAAnB;EAAqD,CAAnE,EAA4C,gBAA5C,GACAL,oBAOO,MAPP,EAOO;IAPAM,QAAM,wDAAUC,uDAAV,EAAsB,WAAtB;EAON,CAPP,GACIC,4BACAR,oBAAsD,OAAtD,EAAsD;IAA/CS,IAAI,EAAC,MAA0C;oEAArBC,KAAKC,gBAAaC;EAAG,CAAtD;;EAAA,uBAAiCF,KAAKC,kBACtCE,4BACAb,oBAAoD,OAApD,EAAoD;IAA7CS,IAAI,EAAC,UAAwC;oEAAfC,KAAKI,UAAOF;EAAG,CAApD;;EAAA,uBAAqCF,KAAKI,YAC1Cd,oBAAoD,QAApD,EAAoD;IAA3CG,OAAK,2CAAOY,MAAP,GAAa,KAAb;EAAsC,CAApD,EAAqC,QAArC,GACAf,oBAAoF,QAApF,EAAoF;IAA5EgB,KAAK,EAAC,YAAsE;IAAxDb,OAAK,2CAAOC,OAAP,CAAeC,IAAf,CAAmB,WAAnB;EAAmD,CAApF,EAAmE,UAAnE,EANJ;;EAAA,QAQ0BU,WAAM,sBAAhCE,oBAAgE,GAAhE,cAA2C,mBAA3C","names":["_createElementVNode","color","_hoisted_1","onClick","$router","push","onSubmit","$options","_hoisted_2","type","user","korisnickoIme","$event","_hoisted_3","lozinka","errMsg","class","_createElementBlock"],"sourceRoot":"","sources":["C:\\Users\\Vasilije\\Desktop\\Fakultet\\Druga godina\\4. semestar\\Veb programiranje\\front_projekat\\demo-front\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n<div class=\"dropdown\">\r\n  <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n    Dropdown button\r\n  </button>\r\n  <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n    <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\r\n    <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n    <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n  </ul>\r\n</div>\r\n\r\n    <button @click=\"this.$router.push('/home')\">Pocetna strana</button>\r\n    <form @submit.prevent=\"handleSubmit\">\r\n        <label>Korisnicko ime</label>\r\n        <input type=\"text\" v-model=\"this.user.korisnickoIme\"/>\r\n        <label>Lozinka</label>\r\n        <input type=\"password\" v-model=\"this.user.lozinka\"/>\r\n        <button @click=\"this.errMsg = false\">Log In</button>\r\n        <button class=\"reg-button\" @click=\"this.$router.push('/register')\">Register</button>\r\n    </form>\r\n    <b color=\"red\" v-if=\"this.errMsg === true\">Neispravni podaci</b>\r\n    \r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n    name: \"LoginView\",\r\n    data: function() {\r\n        return {\r\n            user: {\r\n                korisnickoIme: \"\",\r\n                lozinka: \"\"\r\n            },\r\n            errMsg: false\r\n        }\r\n    },\r\n\r\n    methods: {  \r\n        handleSubmit: function() {\r\n            axios\r\n            .post(\"http://localhost:8081/api/login\", this.user)\r\n            .then(res => {\r\n                if (res.data.uloga === 'Admin') {\r\n                    this.$router.push(\"/admin\") // bolje mozda redirektovati na /profil\r\n                } else if (res.data.uloga === 'Menadzer') {\r\n                    this.$router.push(\"/menadzer\")\r\n                } else if (res.data.uloga === 'Kupac') {\r\n                    this.$router.push(\"/kupac\")\r\n                } else if (res.data.uloga === 'Dostavljac') {\r\n                    this.$router.push(\"/dostavljac\")\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.errMsg = true;\r\n            }); \r\n        }\r\n    }\r\n};    \r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}