{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"link\", {\n  rel: \"stylesheet\",\n  href: \"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"Upload\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_file_input = _resolveComponent(\"v-file-input\");\n\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createVNode(_component_v_file_input, {\n    accept: \"image/png, image/jpeg, image/bmp\",\n    placeholder: \"Pick an avatar\",\n    \"prepend-icon\": \"mdi-camera\",\n    modelValue: _ctx.imageData,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.imageData = $event)\n  }, null, 8\n  /* PROPS */\n  , [\"modelValue\"]), _createVNode(_component_v_btn, {\n    color: \"primary\",\n    onClick: $options.onUpload\n  }, {\n    default: _withCtx(() => [_hoisted_2]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"onClick\"])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCAEAA,oBAGM,MAHN,EAGM;EAFAC,GAAG,EAAC,YAEJ;EADAC,IAAI,EAAC;AACL,CAHN;;AAAA;;iDAW0C;;;;;;;6DAX1CC,YAKCC,aAKiBC,uBALjB,EAKiB;IAJfC,MAAM,EAAC,kCAIQ;IAHfC,WAAW,EAAC,gBAGG;IAFf,gBAAa,YAEE;gBADNC,cACM;+DADNA,iBAASC;EACH,CALjB;;EAAA,mBAMAL,aAAuDM,gBAAvD,EAAuD;IAAhDC,KAAK,EAAC,SAA0C;IAA/BC,OAAK,EAAEC;EAAwB,CAAvD;sBAAyC,MAAM;;;;GAA/C;;EAAA","names":["_createElementVNode","rel","href","_hoisted_1","_createVNode","_component_v_file_input","accept","placeholder","_ctx","$event","_component_v_btn","color","onClick","$options"],"sourceRoot":"","sources":["C:\\Users\\Vasilije\\Documents\\GitHub\\VebProjekat\\vue\\src\\views\\ImageView.vue"],"sourcesContent":["<template>\r\n\r\n<link\r\n      rel=\"stylesheet\"\r\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css\"\r\n    />\r\n\r\n <v-file-input\r\n   accept=\"image/png, image/jpeg, image/bmp\"\r\n   placeholder=\"Pick an avatar\"\r\n   prepend-icon=\"mdi-camera\"\r\n   v-model=\"imageData\"\r\n  ></v-file-input>\r\n <v-btn color=\"primary\" @click=\"onUpload\">Upload</v-btn>\r\n \r\n</template>\r\n\r\n\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport $ from 'jquery';\r\nexport default {\r\n    name: \"ImageView\",\r\n    data() {\r\n        return {\r\n            selectedFile: null\r\n        }\r\n    },  \r\n    methods: {\r\n        onFileChanged (event) {\r\n            this.selectedFile = event.target.files[0]\r\n        },\r\n\r\n        onUpload() {      \r\n            let formData = new FormData();\r\n            formData.append('file', this.imageData);\r\n            axios.post(\r\n                \"/upload/Giros.jpg\"\r\n                ,formData\r\n                ,{headers: {\"Content-Type\": \"multipart/form-data\"}}\r\n            )\r\n            .then(response => {\r\n            //...\r\n            })\r\n            .catch(e => {\r\n            //...\r\n            })\r\n        }\r\n            }\r\n}\r\n   \r\n</script>\r\n\r\n<style>\r\n\r\nbody{\r\n  padding:20px 20px;\r\n}\r\n\r\n.results tr[visible='false'],\r\n.no-result{\r\n  display:none;\r\n}\r\n\r\n.results tr[visible='true']{\r\n  display:table-row;\r\n}\r\n\r\n.counter{\r\n  padding:8px; \r\n  color:#ccc;\r\n}\r\n\r\n.btn btn-primary {\r\n margin-right: 4px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}