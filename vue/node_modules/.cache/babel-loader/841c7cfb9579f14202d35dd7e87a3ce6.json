{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createElementVNode as _createElementVNode, withModifiers as _withModifiers } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"button\", null, \"Log In\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_customInput = _resolveComponent(\"customInput\");\n\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[0] || (_cache[0] = _withModifiers((...args) => $options.handleSubmit && $options.handleSubmit(...args), [\"prevent\"]))\n  }, [_createCommentVNode(\" <customInput v-model=\\\"email\\\" :label=\\\"emailLabel\\\"/> v-bind: je isto sto i :\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.inputs, (input, i) => {\n    return _openBlock(), _createBlock(_component_customInput, {\n      key: i,\n      modelValue: input.value,\n      \"onUpdate:modelValue\": $event => input.value = $event,\n      label: input.label,\n      type: input.type\n    }, null, 8\n    /* PROPS */\n    , [\"modelValue\", \"onUpdate:modelValue\", \"label\", \"type\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createCommentVNode(\" znaci custom input dobija label podatke od parenta a to je comp, jer su custom inputu potrebni \"), _hoisted_1], 32\n  /* HYDRATE_EVENTS */\n  );\n}","map":{"version":3,"mappings":";;gCAcgBA,oBAAuB,QAAvB,EAAuB,IAAvB,EAAQ,QAAR,EAAc;AAAA;AAAd;;;;;uBAXAC,oBAYL,MAZK,EAYL;IAZYC,QAAM,wDAAUC,uDAAV,EAAsB,WAAtB;EAYlB,CAZK,GACLC,2HACAH,oBAQEI,SARF,EAQE,IARF,EAQEC,YAPuBC,WAOvB,EAP6B,CAAlBC,KAAkB,EAAZC,CAAY,KAAX;yBADpBC,aAQEC,sBARF,EAQE;MANUC,GAAG,EAAEH,CAMf;kBAJYD,KAAK,CAACK,KAIlB;uCAJYL,KAAK,CAACK,QAAKC,MAIvB;MAHUC,KAAK,EAAEP,KAAK,CAACO,KAGvB;MAFUC,IAAI,EAAGR,KAAK,CAACQ;IAEvB,CARF;;IAAA;GAQE,CARF;;EAAA,IAQGZ,yHACEa,WAXA;;EAAA","names":["_createElementVNode","_createElementBlock","onSubmit","$options","_createCommentVNode","_Fragment","_renderList","_ctx","input","i","_createBlock","_component_customInput","key","value","$event","label","type","_hoisted_1"],"sourceRoot":"","sources":["C:\\Users\\Vasilije\\Desktop\\Fakultet\\Druga godina\\4. semestar\\Veb programiranje\\front_projekat\\demo-front\\src\\components\\comp.vue"],"sourcesContent":["\r\n    <template>\r\n        \r\n                <form @submit.prevent=\"handleSubmit\">\r\n           <!-- <customInput v-model=\"email\" :label=\"emailLabel\"/> v-bind: je isto sto i :--> \r\n           <customInput \r\n                v-for=\"(input,i) in inputs\" \r\n                v-bind:key=\"i\"\r\n\r\n                v-model=\"input.value\" \r\n                v-bind:label=\"input.label\"\r\n                v-bind:type =\"input.type\"\r\n           \r\n           /> <!-- znaci custom input dobija label podatke od parenta a to je comp, jer su custom inputu potrebni -->\r\n                <button>Log In</button>\r\n    </form>\r\n\r\n\r\n    </template>\r\n\r\n    <script>\r\n    import customInput from \"../components/CustomInputComp.vue\"\r\n    export default {\r\n    name: \"comp\",\r\n    components: {customInput},\r\n    data: function() {\r\n        return {\r\n            inputs: [\r\n                {\r\n                    label: 'Email', \r\n                    value: '', \r\n                    type: 'email',\r\n                },\r\n                {\r\n                    label: 'Password', \r\n                    value: '', \r\n                    type: 'password',\r\n                }\r\n            ],\r\n            email: \"\",\r\n            password: \"\",\r\n            title: \"Login Form\",\r\n            emailLabel: 'Email',\r\n            passwordLabel: 'Password'\r\n};\r\n    },\r\n    //<p v-for=\"(str, i) in inputs\" v-bind:key=\"str\">{{ str }} </p> <!-- dobra je stvar koristiti key, pomaze kod bugova posle, unique reference for each paragraph-->\r\n    methods: {\r\n        handleSubmit() {\r\n            console.log(this.email, this.password)\r\n        }\r\n    }\r\n    }\r\n        \r\n    </script>\r\n\r\n\r\n    <style>\r\n\r\n    input {\r\n        margin: 10px;\r\n        color:  blue;\r\n        display: block;\r\n    }\r\n\r\n    </style>"]},"metadata":{},"sourceType":"module"}