{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, withModifiers as _withModifiers } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"button\", null, \"Log In\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_customInput = _resolveComponent(\"customInput\");\n\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.handleSubmit && $options.handleSubmit(...args), [\"prevent\"]))\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.inputs, (str, i) => {\n    return _openBlock(), _createElementBlock(\"p\", {\n      key: str\n    }, _toDisplayString(i), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createCommentVNode(\" dobra je stvar koristiti key, pomaze kod bugova posle, unique reference for each paragraph\"), _createVNode(_component_customInput, {\n    modelValue: _ctx.email,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.email = $event),\n    label: _ctx.emailLabel\n  }, null, 8\n  /* PROPS */\n  , [\"modelValue\", \"label\"]), _createCommentVNode(\" v-bind: je isto sto i :\"), _createVNode(_component_customInput, {\n    modelValue: _ctx.password,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.password = $event),\n    label: _ctx.passwordLabel\n  }, null, 8\n  /* PROPS */\n  , [\"modelValue\", \"label\"]), _createCommentVNode(\" znaci custom input dobija label podatke od parenta a to je comp, jer su custom inputu potrebni \"), _hoisted_1], 32\n  /* HYDRATE_EVENTS */\n  );\n}","map":{"version":3,"mappings":";;gCAOgBA,oBAAuB,QAAvB,EAAuB,IAAvB,EAAQ,QAAR,EAAc;AAAA;AAAd;;;;;uBAJAC,oBAKL,MALK,EAKL;IALYC,QAAM,wDAAUC,uDAAV,EAAsB,WAAtB;EAKlB,CALK,sBACZF,oBAA2DG,SAA3D,EAA2D,IAA3D,EAA2DC,YAArCC,WAAqC,EAA/B,CAAjBC,GAAiB,EAAZC,CAAY,KAAX;yBAAjBP,oBAA2D,GAA3D,EAA2D;MAAtBQ,GAAG,EAAEF;IAAiB,CAA3D,EAA6CG,iBAAKF,CAAL,CAA7C,EAAmD;IAAA;IAAnD;GAA2D,CAA3D;;EAAA,IAA4DG,oHACpDC,aAAkDC,sBAAlD,EAAkD;gBAA5BP,UAA4B;+DAA5BA,aAAKQ,OAAuB;IAApBC,KAAK,EAAET;EAAa,CAAlD;;EAAA,4BAAmDK,iDAC/CC,aAA8DC,sBAA9D,EAA8D;gBAAxCP,aAAwC;+DAAxCA,gBAAQQ,OAAgC;IAAvBC,KAAK,EAAET;EAAgB,CAA9D;;EAAA,4BAA+DK,yHAC/DK,WAJA;;EAAA","names":["_createElementVNode","_createElementBlock","onSubmit","$options","_Fragment","_renderList","_ctx","str","i","key","_toDisplayString","_createCommentVNode","_createVNode","_component_customInput","$event","label","_hoisted_1"],"sourceRoot":"","sources":["C:\\Users\\Vasilije\\Desktop\\Fakultet\\Druga godina\\4. semestar\\Veb programiranje\\front_projekat\\demo-front\\src\\components\\comp.vue"],"sourcesContent":["\r\n    <template>\r\n        \r\n                <form @submit.prevent=\"handleSubmit\">\r\n    <p v-for=\"(str, i) in inputs\" v-bind:key=\"str\">{{ i }} </p> <!-- dobra je stvar koristiti key, pomaze kod bugova posle, unique reference for each paragraph-->\r\n            <customInput v-model=\"email\" :label=\"emailLabel\"/> <!-- v-bind: je isto sto i :-->\r\n                <customInput v-model=\"password\" v-bind:label=\"passwordLabel\"/> <!-- znaci custom input dobija label podatke od parenta a to je comp, jer su custom inputu potrebni -->\r\n                <button>Log In</button>\r\n    </form>\r\n\r\n\r\n    </template>\r\n\r\n    <script>\r\n    import customInput from \"../components/CustomInputComp.vue\"\r\n    export default {\r\n    name: \"comp\",\r\n    components: {customInput},\r\n    data: function() {\r\n        return {\r\n            inputs: [\r\n                'email',\r\n                'password',\r\n                'name'\r\n            ],\r\n            email: \"\",\r\n            password: \"\",\r\n            title: \"Login Form\",\r\n            emailLabel: 'Email',\r\n            passwordLabel: 'Password'\r\n};\r\n    },\r\n    methods: {\r\n        handleSubmit() {\r\n            console.log(this.email, this.password)\r\n        }\r\n    }\r\n    }\r\n        \r\n    </script>\r\n\r\n\r\n    <style>\r\n\r\n    input {\r\n        margin: 10px;\r\n        color:  blue;\r\n        display: block;\r\n    }\r\n\r\n    </style>"]},"metadata":{},"sourceType":"module"}